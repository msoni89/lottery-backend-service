version: '3.7'

# This file defines the services that will be created when you run `docker-compose up`.
services:
  # The `postgres` service defines a PostgreSQL database.
  postgres:
    image: postgres:13-alpine
    container_name: postgres
    environment:
      # The `POSTGRES_USER` and `POSTGRES_PASSWORD` environment variables define the username and password for the PostgreSQL database.
      POSTGRES_USER: user@0242ac120002
      POSTGRES_PASSWORD: password@6fad8b42
      POSTGRES_DB: lottery_db
    # The `ports` section defines the port mappings for the service. The `5432:5432` mapping exposes port 5432 on the host machine to port 5432 on the container.
    ports:
      - "5432:5432"
    # The `networks` section defines the networks that the service will join. The `backend` network is defined below.
    networks:
      - backend

  # The `redis` service defines a Redis cache.
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    # The `networks` section defines the networks that the service will join. The `backend` network is defined below.
    networks:
      - backend
    ports:
      - "6379:6379"

  # The `backend-service` service defines the backend application.
  backend-service:
    # The `build` section defines the Dockerfile that will be used to build the image for the backend service. The Dockerfile is located in the current directory.
    build:
      context: .
      dockerfile: Dockerfile
    # The `deploy` section defines the deployment configuration for the backend service. The `mode: replicated` setting tells Docker Compose to create 3 replicas of the service.
    deploy:
      mode: replicated
      replicas: 5
    restart: always
    # The `ports` section defines the port mappings for the service. The `8080:8080` mapping exposes port 8080 on the host machine to port 8080 on the container.
    ports:
      - "8080"
    # The `environment` section defines the environment variables that will be passed to the backend service container. The `SPRING_DATASOURCE_URL` environment variable defines the connection string for the PostgreSQL database.
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/lottery_db
      SPRING_DATASOURCE_USERNAME: user@0242ac120002
      SPRING_DATASOURCE_PASSWORD: password@6fad8b42
    # The `networks` section defines the networks that the service will join. The `backend` network is defined below.
    networks:
      - backend

  # The `nginx` service defines a Nginx web server.
  nginx:
    image: nginx:latest
    restart: always
    container_name: nginx
    # The `volumes` section defines the volum0.0.0.0:8080es that will be mounted into the Nginx container. The `./nginx.conf:/etc/nginx/nginx.conf:ro` volume mounts the `nginx.conf` file from the host machine into the `/etc/nginx/nginx.conf` directory in the container.
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    # The `depends_on` section defines the services that the Nginx container depends on. The `backend-service` service must be running before the Nginx container can start.
    depends_on:
      - backend-service
    networks:
      - backend
    ports:
      - "80:80"

# The `networks` section defines the networks that will be created. The `backend` network is used to facilitate communication between the services.
networks:
  backend:
    driver: bridge
